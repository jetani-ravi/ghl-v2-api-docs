{
  "openapi": "3.0.0",
  "paths": {
    "/payments/orders": {
      "get": {
        "operationId": "list-orders",
        "summary": "List Orders",
        "description": "The \"List Orders\" API allows to retrieve a paginated list of orders. Customize your results by filtering orders based on name, alt type, order status, payment mode, date range, type of source, contact, funnel products or paginate through the list using the provided query parameters. This endpoint provides a straightforward way to explore and retrieve order information.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "locationId",
            "required": false,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "LocationId is the id of the sub-account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altId",
            "required": true,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "AltId is the unique identifier e.g: location id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altType",
            "required": true,
            "in": "query",
            "example": "location",
            "description": "AltType is the type of identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "example": "completed",
            "description": "Order status.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMode",
            "required": false,
            "in": "query",
            "example": "live",
            "description": "Mode of payment.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startAt",
            "required": false,
            "in": "query",
            "example": "2024-02-01",
            "description": "Starting interval of orders.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endAt",
            "required": false,
            "in": "query",
            "example": "2024-02-13",
            "description": "Closing interval of orders.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "example": "Awesome order",
            "description": "The name of the order for searching.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "required": false,
            "in": "query",
            "example": "XPLSw2SVagl12LMDeTmQ",
            "description": "Contact id for filtering of orders.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "funnelProductIds",
            "required": false,
            "in": "query",
            "example": "61dd0c7dc077f712a5f787ff,61d6afc9d39ac5e35965c017",
            "description": "Funnel product ids separated by comma.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 20,
            "description": "The maximum number of items to be included in a single page of results",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The starting index of the page, indicating the position from which the results should be retrieved.",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOrdersResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "Location-Access": []
          }
        ]
      }
    },
    "/payments/orders/{orderId}": {
      "get": {
        "operationId": "get-order-by-id",
        "summary": "Get Order by ID",
        "description": "The \"Get Order by ID\" API allows to retrieve information for a specific order using its unique identifier. Use this endpoint to fetch details for a single order based on the provided order ID.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "description": "ID of the order that needs to be returned",
            "example": "653f5e0cde5a1314e62a837c",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": false,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "LocationId is the id of the sub-account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altId",
            "required": true,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "AltId is the unique identifier e.g: location id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altType",
            "required": true,
            "in": "query",
            "example": "location",
            "description": "AltType is the type of identifier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "Location-Access": []
          }
        ]
      }
    },
    "/payments/transactions": {
      "get": {
        "operationId": "list-transactions",
        "summary": "List Transactions",
        "description": "The \"List Transactions\" API allows to retrieve a paginated list of transactions. Customize your results by filtering transactions based on name, alt type, transaction status, payment mode, date range, type of source, contact, subscription id, entity id or paginate through the list using the provided query parameters. This endpoint provides a straightforward way to explore and retrieve transaction information.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "locationId",
            "required": false,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "LocationId is the id of the sub-account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altId",
            "required": true,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "AltId is the unique identifier e.g: location id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altType",
            "required": true,
            "in": "query",
            "example": "location",
            "description": "AltType is the type of identifier.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMode",
            "required": false,
            "in": "query",
            "example": "live",
            "description": "Mode of payment.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startAt",
            "required": false,
            "in": "query",
            "example": "2024-02-01",
            "description": "Starting interval of transactions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endAt",
            "required": false,
            "in": "query",
            "example": "2024-02-13",
            "description": "Closing interval of transactions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entitySourceType",
            "required": false,
            "in": "query",
            "example": "funnel",
            "description": "Source of the transactions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entitySourceSubType",
            "required": false,
            "in": "query",
            "example": "two_step_order_form",
            "description": "Source sub-type of the transactions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "example": "Awesome transaction",
            "description": "The name of the transaction for searching.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subscriptionId",
            "required": false,
            "in": "query",
            "example": "sub_1KGcXDCScnf89tZoVkoEMCEL",
            "description": "Subscription id for filtering of transactions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": false,
            "in": "query",
            "example": "61dd0fe9c077f73e67f78803",
            "description": "Entity id for filtering of transactions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "required": false,
            "in": "query",
            "example": "XPLSw2SVagl12LMDeTmQ",
            "description": "Contact id for filtering of transactions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 20,
            "description": "The maximum number of items to be included in a single page of results",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The starting index of the page, indicating the position from which the results should be retrieved.",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTxnsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "Location-Access": []
          }
        ]
      }
    },
    "/payments/transactions/{transactionId}": {
      "get": {
        "operationId": "get-transaction-by-id",
        "summary": "Get Transaction by ID",
        "description": "The \"Get Transaction by ID\" API allows to retrieve information for a specific transaction using its unique identifier. Use this endpoint to fetch details for a single transaction based on the provided transaction ID.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "transactionId",
            "required": true,
            "in": "path",
            "description": "ID of the transaction that needs to be returned",
            "example": "61dd0feac077f72010f78804",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "required": false,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "LocationId is the id of the sub-account.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altId",
            "required": true,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "AltId is the unique identifier e.g: location id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altType",
            "required": true,
            "in": "query",
            "example": "location",
            "description": "AltType is the type of identifier.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTxnResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "security": [
          {
            "Location-Access": []
          }
        ]
      }
    },
    "/payments/subscriptions": {
      "get": {
        "operationId": "list-subscriptions",
        "summary": "List Subscriptions",
        "description": "The \"List Subscriptions\" API allows to retrieve a paginated list of subscriptions. Customize your results by filtering subscriptions based on name, alt type, subscription status, payment mode, date range, type of source, contact, subscription id, entity id, contact or paginate through the list using the provided query parameters. This endpoint provides a straightforward way to explore and retrieve subscription information.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "altId",
            "required": true,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "AltId is the unique identifier e.g: location id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altType",
            "required": true,
            "in": "query",
            "example": "location",
            "description": "AltType is the type of identifier.",
            "schema": {
              "enum": [
                "location"
              ],
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "required": false,
            "in": "query",
            "example": "61dd0fe9c077f73e67f78803",
            "description": "Entity id for filtering of subscriptions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentMode",
            "required": false,
            "in": "query",
            "example": "live",
            "description": "Mode of payment.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startAt",
            "required": false,
            "in": "query",
            "example": "2024-02-01",
            "description": "Starting interval of subscriptions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endAt",
            "required": false,
            "in": "query",
            "example": "2024-02-13",
            "description": "Closing interval of subscriptions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entitySourceType",
            "required": false,
            "in": "query",
            "example": "funnel",
            "description": "Source of the subscriptions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "example": "Awesome subscription",
            "description": "The name of the subscription for searching.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contactId",
            "required": false,
            "in": "query",
            "description": "Contact ID for the subscription",
            "example": "AmuzcoPBpgKeccNsFlib",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "example": "64bf78af39118e4011926cba",
            "description": "Subscription id for filtering of subscriptions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "example": 20,
            "description": "The maximum number of items to be included in a single page of results",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "example": 0,
            "description": "The starting index of the page, indicating the position from which the results should be retrieved.",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSubscriptionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "Location-Access": []
          }
        ]
      }
    },
    "/payments/subscriptions/{subscriptionId}": {
      "get": {
        "operationId": "get-subscription-by-id",
        "summary": "Get Subscription by ID",
        "description": "The \"Get Subscription by ID\" API allows to retrieve information for a specific subscription using its unique identifier. Use this endpoint to fetch details for a single subscription based on the provided subscription ID.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Access Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Bearer 9c48df2694a849b6089f9d0d3513efe"
            }
          },
          {
            "name": "Version",
            "in": "header",
            "description": "API Version",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "2021-07-28"
              ]
            }
          },
          {
            "name": "subscriptionId",
            "required": true,
            "in": "path",
            "description": "ID of the subscription that needs to be returned",
            "example": "6322e9c9e39fc14ab3ed7042",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altId",
            "required": true,
            "in": "query",
            "example": "3SwdhCu3svxI8AKsPJt6",
            "description": "AltId is the unique identifier e.g: location id.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "altType",
            "required": true,
            "in": "query",
            "example": "location",
            "description": "AltType is the type of identifier.",
            "schema": {
              "enum": [
                "location"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponseSchema"
                }
              }
            }
          },
          "400": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "security": [
          {
            "Location-Access": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Payments API",
    "description": "Documentation for payments API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Payments",
      "description": "Documentation for payments API"
    }
  ],
  "servers": [
    {
      "url": "https://services.leadconnectorhq.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Location",
        "type": "http"
      },
      "Location-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Location",
        "type": "http"
      },
      "Agency-Access": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Authorization",
        "in": "header",
        "description": "Use the Access Token generated with user type as Company",
        "type": "http"
      }
    },
    "schemas": {
      "BadRequestDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad Request"
          }
        }
      },
      "UnauthorizedDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Invalid token: access token is invalid"
          },
          "error": {
            "type": "string",
            "example": "Unauthorized"
          }
        }
      },
      "OrderResponseSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the order.",
            "example": "653f5e0cde5a1314e62a837c"
          },
          "altId": {
            "type": "string",
            "description": "AltId is the unique identifier eg: location id.",
            "example": "3SwdhCu3svxI8AKsPJt6"
          },
          "altType": {
            "type": "string",
            "example": "location",
            "description": "AltType is the type of identifier."
          },
          "contactId": {
            "type": "string",
            "example": "XPLSw2SVagl12LMDeTmQ",
            "description": "Contact id corresponding to the order."
          },
          "contactName": {
            "type": "string",
            "example": "James Bond",
            "description": "Contact name corresponding to the order."
          },
          "contactEmail": {
            "type": "string",
            "example": "james.bond@gohighlevel.com",
            "description": "Contact email corresponding to the order."
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Currency in which order was created."
          },
          "amount": {
            "type": "number",
            "example": "100",
            "description": "Order value."
          },
          "subtotal": {
            "type": "number",
            "example": "100",
            "description": "Order sub-total value."
          },
          "discount": {
            "type": "number",
            "example": "10",
            "description": "Discount value on order."
          },
          "status": {
            "type": "string",
            "description": "The status of the order (e.g., completed).",
            "example": "completed"
          },
          "liveMode": {
            "type": "boolean",
            "example": "false",
            "description": "Order is in live / test mode."
          },
          "totalProducts": {
            "type": "number",
            "example": "5",
            "description": "Total products in an order."
          },
          "sourceType": {
            "type": "string",
            "example": "funnel",
            "description": "Source type of order (eg: funnel)."
          },
          "sourceName": {
            "type": "string",
            "example": "onestep",
            "description": "Source name for the order."
          },
          "sourceId": {
            "type": "string",
            "description": "Source id for the order.",
            "example": "kDj7BHej9Zyyq3QakJmz"
          },
          "sourceMeta": {
            "type": "object",
            "description": "Meta content for the source of order.",
            "example": "{ domain: \"app.gohighlevel.com\", pageId:  \"rBVhyYhMsbxbO8ZqOcei\", pageUrl:  \"/v2/preview/rBVhyYhMsbxbO8ZqOcei\", stepId:   \"5a772f62-3fbc-418b-af1b-be8929dd64c2\"}"
          },
          "couponCode": {
            "type": "string",
            "description": "Coupon code for the order.",
            "example": "100PER"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp of the order.",
            "example": "2023-11-20T10:23:36.515Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update timestamp of the order.",
            "example": "2024-01-23T09:57:04.846Z"
          },
          "sourceSubType": {
            "type": "string",
            "description": "Source sub-type for the order.",
            "example": "one_step_order_form"
          },
          "fulfillmentStatus": {
            "type": "string",
            "description": "Fulfillment status of the order.",
            "example": "unfulfilled"
          },
          "onetimeProducts": {
            "type": "number",
            "example": "1",
            "description": "Total one time products in an order."
          },
          "recurringProducts": {
            "type": "number",
            "example": "1",
            "description": "Total recurring time products in an order."
          }
        },
        "required": [
          "_id",
          "altId",
          "altType",
          "status",
          "sourceType",
          "createdAt",
          "updatedAt"
        ]
      },
      "ListOrdersResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "An array of orders",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderResponseSchema"
            }
          },
          "totalCount": {
            "type": "number",
            "description": "total orders count"
          }
        },
        "required": [
          "data",
          "totalCount"
        ]
      },
      "UnprocessableDTO": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "example": 422
          },
          "message": {
            "example": [
              "Unprocessable Entity"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "type": "string",
            "example": "Unprocessable Entity"
          }
        }
      },
      "AmountSummary": {
        "type": "object",
        "properties": {
          "subtotal": {
            "type": "number",
            "example": "100",
            "description": "Order sub-total value."
          },
          "discount": {
            "type": "number",
            "example": "10",
            "description": "Discount value on order."
          }
        },
        "required": [
          "subtotal"
        ]
      },
      "OrderSource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "funnel",
              "website",
              "invoice",
              "calendar",
              "text2Pay",
              "membership",
              "mobile_app",
              "communities",
              "point_of_sale",
              "manual",
              "form",
              "survey",
              "payment_link",
              "external"
            ]
          },
          "subType": {
            "type": "string",
            "enum": [
              "one_step_order_form",
              "two_step_order_form",
              "upsell",
              "tap_to_pay",
              "card_payment",
              "store",
              "contact_view",
              "shopify"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "meta": {
            "type": "object"
          }
        },
        "required": [
          "type",
          "id"
        ]
      },
      "GetOrderResponseSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the order.",
            "example": "653f5e0cde5a1314e62a837c"
          },
          "altId": {
            "type": "string",
            "description": "AltId is the unique identifier eg: location id.",
            "example": "3SwdhCu3svxI8AKsPJt6"
          },
          "altType": {
            "type": "string",
            "example": "location",
            "description": "AltType is the type of identifier."
          },
          "contactId": {
            "type": "string",
            "example": "XPLSw2SVagl12LMDeTmQ",
            "description": "Contact id corresponding to the order."
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Currency in which order was created."
          },
          "amount": {
            "type": "number",
            "example": "100",
            "description": "Order value."
          },
          "status": {
            "type": "string",
            "description": "The status of the order (e.g., completed).",
            "example": "completed"
          },
          "liveMode": {
            "type": "boolean",
            "example": "false",
            "description": "Order is in live / test mode."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp of the order.",
            "example": "2023-11-20T10:23:36.515Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update timestamp of the order.",
            "example": "2024-01-23T09:57:04.846Z"
          },
          "fulfillmentStatus": {
            "type": "string",
            "description": "Fulfillment status of the order.",
            "example": "unfulfilled"
          },
          "contactSnapshot": {
            "type": "object",
            "description": "Contact details of the order.",
            "example": "{ last_name: \"Mcclain\", type: \"lead\", first_name_lower_case: \"rogan\", email: \"anish+11@gohighlevel.com\", last_name_lower_case: \"mcclain\", location_id: \"o6241QsiRwUIJHyjuhos\", company_name: \"Jordan and Cox Trading\"}"
          },
          "amountSummary": {
            "description": "Amount details of the order.",
            "example": "{ subtotal: 100, discount: 5 }",
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountSummary"
              }
            ]
          },
          "source": {
            "description": "Source details of the order.",
            "example": "{ type: \"invoice\", id: \"61dd48ff65b013bc39bb09c6\" }",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderSource"
              }
            ]
          },
          "items": {
            "description": "Item details of the order.",
            "example": "{ _id: 61dd33e88058b9f967ca79dc, authorizeAmount: 0, locationId: \"SBAWb4yu7A4LSc0skQ6g\", name: \"Sample Product\": price: {}, product: { name: \"Testing product\", productType: \"SERVICE\" }}",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "coupon": {
            "type": "object",
            "description": "Coupon details of the order.",
            "example": "{ code: \"FEST10\", _id: \"63455e48901b43d4ef364a20\" }"
          },
          "trackingId": {
            "type": "string",
            "description": "Tracking id of the order.",
            "example": "63319ef9-de0a-4c84-aebd-3585fb4a0cdf"
          },
          "fingerprint": {
            "type": "string",
            "description": "Fingerprint id of the order.",
            "example": "5d51db5a-42b0-4b04-ba88-2c046c982a3a"
          },
          "meta": {
            "type": "object",
            "description": "Meta details of the order.",
            "example": "{ couponSessionExpired: true }"
          },
          "markAsTest": {
            "type": "boolean",
            "description": "Is test order.",
            "example": "false"
          },
          "traceId": {
            "type": "string",
            "description": "Trace id of the order.",
            "example": "d3b16a92-a8ed-4e6b-8467-844750f78ed5"
          }
        },
        "required": [
          "_id",
          "altId",
          "altType",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "TxnResponseSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the transaction.",
            "example": "61dd0feac077f72010f78804"
          },
          "altId": {
            "type": "string",
            "description": "AltId is the unique identifier eg: location id.",
            "example": "3SwdhCu3svxI8AKsPJt6"
          },
          "altType": {
            "type": "string",
            "example": "location",
            "description": "AltType is the type of identifier."
          },
          "contactId": {
            "type": "string",
            "example": "XPLSw2SVagl12LMDeTmQ",
            "description": "Contact id corresponding to the transaction."
          },
          "contactName": {
            "type": "string",
            "example": "James Bond",
            "description": "Contact name corresponding to the transaction."
          },
          "contactEmail": {
            "type": "string",
            "example": "james.bond@gohighlevel.com",
            "description": "Contact email corresponding to the transaction."
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Currency in which transaction occurred."
          },
          "amount": {
            "type": "number",
            "example": "100",
            "description": "Transaction value."
          },
          "status": {
            "type": "object",
            "description": "The status of the transaction (e.g., succeeded).",
            "example": "succeeded"
          },
          "liveMode": {
            "type": "boolean",
            "example": "false",
            "description": "Transaction is in live / test mode."
          },
          "entityType": {
            "type": "string",
            "example": "order",
            "description": "Entity type of transaction (eg: order)."
          },
          "entityId": {
            "type": "string",
            "example": "61dd0fe9c077f73e67f78803",
            "description": "Entity id for the transaction. e.g: order id"
          },
          "entitySourceType": {
            "type": "string",
            "example": "funnel",
            "description": "Entity source type of transaction (eg: funnel)."
          },
          "entitySourceSubType": {
            "type": "string",
            "example": "two_step_order_form",
            "description": "Entity source sub-type of the transactions."
          },
          "entitySourceName": {
            "type": "string",
            "example": "new funnel",
            "description": "Entity source name for the transaction."
          },
          "entitySourceId": {
            "type": "string",
            "description": "Entity source id for the transaction.",
            "example": "BDBMEghdIUaqMPEsK349"
          },
          "entitySourceMeta": {
            "type": "object",
            "description": "Meta content for the entity source of transaction.",
            "example": "{ domain: \"app.gohighlevel.com\", pageId:  \"rBVhyYhMsbxbO8ZqOcei\", pageUrl:  \"/v2/preview/rBVhyYhMsbxbO8ZqOcei\", stepId:   \"5a772f62-3fbc-418b-af1b-be8929dd64c2\"}"
          },
          "subscriptionId": {
            "type": "string",
            "example": "sub_1KGcXDCScnf89tZoVkoEMCEL",
            "description": "Subscription id for transaction."
          },
          "chargeId": {
            "type": "string",
            "example": "in_1KGcXDCScnf89tZohCsmImwE",
            "description": "Charge id for transaction."
          },
          "chargeSnapshot": {
            "type": "object",
            "description": "Charge snapshot of transaction.",
            "example": "{ id: \"in_1KGcXDCScnf89tZohCsmImwE\", object: \"invoice\", account_country: \"US\",  account_name:  \"GHL-Testing\" }"
          },
          "paymentProviderType": {
            "type": "string",
            "example": "stripe",
            "description": "Payment provider for transaction."
          },
          "paymentProviderConnectedAccount": {
            "type": "string",
            "example": "612ca676b484b241fef9d962",
            "description": "Payment provider  account id for transaction."
          },
          "ipAddress": {
            "type": "string",
            "example": "107.178.194.224",
            "description": "Ip address from where transaction was initiated."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp of the transaction.",
            "example": "2023-11-20T10:23:36.515Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The update timestamp of the transaction.",
            "example": "2023-11-20T10:23:36.515Z"
          },
          "amountRefunded": {
            "type": "number",
            "example": "10",
            "description": "Transaction amount refunded."
          },
          "paymentMethod": {
            "type": "object",
            "example": "{ card: { \"brand\": \"discover\", \"last4\": \"0012\" } }",
            "description": "Transaction payment method details."
          }
        },
        "required": [
          "_id",
          "altId",
          "altType",
          "status",
          "entitySourceType",
          "createdAt",
          "updatedAt"
        ]
      },
      "ListTxnsResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "An array of transactions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxnResponseSchema"
            }
          },
          "totalCount": {
            "type": "number",
            "description": "total transactions count"
          }
        },
        "required": [
          "data",
          "totalCount"
        ]
      },
      "GetTxnResponseSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the transaction.",
            "example": "61dd0feac077f72010f78804"
          },
          "altType": {
            "type": "string",
            "example": "location",
            "description": "AltType is the type of identifier."
          },
          "altId": {
            "type": "string",
            "description": "AltId is the unique identifier eg: location id.",
            "example": "3SwdhCu3svxI8AKsPJt6"
          },
          "contactId": {
            "type": "string",
            "example": "XPLSw2SVagl12LMDeTmQ",
            "description": "Contact id corresponding to the transaction."
          },
          "contactSnapshot": {
            "type": "object",
            "description": "Contact details of the transaction.",
            "example": "{ last_name: \"Mcclain\", type: \"lead\", first_name_lower_case: \"rogan\", email: \"anish+11@gohighlevel.com\", last_name_lower_case: \"mcclain\", location_id: \"o6241QsiRwUIJHyjuhos\", company_name: \"Jordan and Cox Trading\"}"
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Currency in which transaction was made."
          },
          "amount": {
            "type": "number",
            "example": "100",
            "description": "Transaction value."
          },
          "status": {
            "type": "object",
            "example": "succeeded",
            "description": "Transaction status."
          },
          "liveMode": {
            "type": "boolean",
            "example": "false",
            "description": "Transaction is in live / test mode."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp of the transaction.",
            "example": "2023-11-20T10:23:36.515Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update timestamp of the transaction.",
            "example": "2024-01-23T09:57:04.846Z"
          },
          "entityType": {
            "type": "string",
            "example": "order",
            "description": "Entity type of transaction (eg: order)."
          },
          "entityId": {
            "type": "string",
            "example": "61dd0fe9c077f73e67f78803",
            "description": "Entity id for the transaction. e.g: order id"
          },
          "entitySource": {
            "description": "Entity source details for the transaction.",
            "example": "{ type: \"funnel\", id: \"BDBMEghdIUaqMPEsK349\", subType: \"two_step_order_form\", name: \"new funnel\" }",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderSource"
              }
            ]
          },
          "chargeId": {
            "type": "string",
            "example": "in_1KGcXDCScnf89tZohCsmImwE",
            "description": "Charge id for transaction."
          },
          "chargeSnapshot": {
            "type": "object",
            "description": "Charge snapshot of transaction.",
            "example": "{ id: \"in_1KGcXDCScnf89tZohCsmImwE\", object: \"invoice\", account_country: \"US\",  account_name:  \"GHL-Testing\" }"
          },
          "invoiceId": {
            "type": "string",
            "example": "in_1KGcXDCScnf89tZohCsmImwE",
            "description": "Invoice id for the transaction."
          },
          "subscriptionId": {
            "type": "string",
            "example": "sub_1KGcXDCScnf89tZoVkoEMCEL",
            "description": "Subscription id for transaction."
          },
          "paymentProvider": {
            "type": "object",
            "description": "Payment provider details of the transaction.",
            "example": "{ type: \"stripe\", connectedAccount: { _id: \"612ca676b484b241fef9d962\", accountId: \"acct_1Ihw53CScnf89tZo\" } }"
          },
          "ipAddress": {
            "type": "string",
            "example": "107.178.194.224",
            "description": "Ip address from where transaction was initiated."
          },
          "meta": {
            "type": "object",
            "description": "Meta details of the transaction.",
            "example": "{ stepId: \"af7c731e-e36f-4152-bd1a-3f69a31d6d6d\", pageId: \"A8ltotc2jZxurJba4e3Y\", pageUrl: \"/v2/preview/A8ltotc2jZxurJba4e3Y\" }"
          },
          "markAsTest": {
            "type": "boolean",
            "description": "Is test transaction.",
            "example": "false"
          },
          "isParent": {
            "type": "boolean",
            "description": "Is parent transaction.",
            "example": "false"
          },
          "amountRefunded": {
            "type": "number",
            "example": "10",
            "description": "Transaction amount refunded."
          },
          "receiptId": {
            "type": "string",
            "example": "6492fbea489bc07892c6defb",
            "description": "Receipt id for transaction."
          },
          "qboSynced": {
            "type": "boolean",
            "description": "Is transaction qbo synced.",
            "example": "false"
          },
          "qboResponse": {
            "type": "object",
            "description": "Qbo details of the transaction.",
            "example": "{ domain: \"QBO\", sparse: false, Id: \"180\", SyncToken: \"0\", TotalAmt: 25 }"
          },
          "traceId": {
            "type": "string",
            "description": "Trace id of the transaction.",
            "example": "d3b16a92-a8ed-4e6b-8467-844750f78ed5"
          }
        },
        "required": [
          "_id",
          "altType",
          "altId",
          "createdAt",
          "updatedAt"
        ]
      },
      "SubscriptionResponseSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the subscription.",
            "example": "64bf78af39118e4011926cba"
          },
          "altId": {
            "type": "string",
            "description": "AltId is the unique identifier eg: location id.",
            "example": "3SwdhCu3svxI8AKsPJt6"
          },
          "altType": {
            "type": "string",
            "example": "location",
            "description": "AltType is the type of identifier.",
            "enum": [
              "location"
            ]
          },
          "contactId": {
            "type": "string",
            "example": "XPLSw2SVagl12LMDeTmQ",
            "description": "Contact id corresponding to the subscription."
          },
          "contactName": {
            "type": "string",
            "example": "James Bond",
            "description": "Contact name corresponding to the subscription."
          },
          "contactEmail": {
            "type": "string",
            "example": "james.bond@gohighlevel.com",
            "description": "Contact email corresponding to the subscription."
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Currency in which subscription occurred."
          },
          "amount": {
            "type": "number",
            "example": "100",
            "description": "Subscription value."
          },
          "status": {
            "type": "object",
            "description": "The status of the subscription (e.g., succeeded).",
            "example": "active"
          },
          "liveMode": {
            "type": "boolean",
            "example": "false",
            "description": "Subscription is in live / test mode."
          },
          "entityType": {
            "type": "string",
            "example": "order",
            "description": "Entity type of subscription (eg: order)."
          },
          "entityId": {
            "type": "string",
            "example": "62f4db0f3059ecee61379012",
            "description": "Entity id for the subscription. e.g: order id"
          },
          "entitySourceType": {
            "type": "string",
            "example": "funnel",
            "description": "Entity source type of subscription (eg: funnel)."
          },
          "entitySourceName": {
            "type": "string",
            "example": "Attribution Funnel",
            "description": "Entity source name for the subscription."
          },
          "entitySourceId": {
            "type": "string",
            "description": "Entity source id for the subscription.",
            "example": "bevrkPbLaDNXFaqfLKMm"
          },
          "entitySourceMeta": {
            "type": "object",
            "description": "Meta content for the entity source of subscription.",
            "example": "{ domain: \"app.gohighlevel.com\", pageId:  \"sxC4lNhFIavEnLZh5KhC\", pageUrl:  \"/v2/preview/sxC4lNhFIavEnLZh5KhC\", stepId: \"7d303d1f-cb85-403d-b548-bf01de5c7bb0\" }"
          },
          "subscriptionId": {
            "type": "string",
            "example": "I-0UE609H8E43P",
            "description": "Subscription id for subscription."
          },
          "subscriptionSnapshot": {
            "type": "object",
            "description": "Snapshot of subscription.",
            "example": "{ status: \"ACTIVE\", status_update_time: \"2022-08-16T11:06:53Z\", id: \"I-0UE609H8E43P\", plan_id: \"P-82K11750F0313430KMLRGE6Y\", start_time: \"2022-08-16T11:05:31Z\", quantity: 1 }"
          },
          "paymentProviderType": {
            "type": "string",
            "example": "stripe",
            "description": "Payment provider for subscription."
          },
          "paymentProviderConnectedAccount": {
            "type": "string",
            "example": "ATn0CqrzrWS5ak185Bsb1xCpyzBDOZ8WdRxyFotppLYePTDhiuQ49H5QXO_L-4HKk1GBn7f9_QhbNK2s",
            "description": "Payment provider connected account id for subscription."
          },
          "ipAddress": {
            "type": "string",
            "example": "103.100.16.82",
            "description": "Ip address from where subscription was initiated."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp of the subscription.",
            "example": "2023-11-20T10:23:36.515Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The update timestamp of the subscription.",
            "example": "2023-11-20T10:23:36.515Z"
          }
        },
        "required": [
          "_id",
          "altId",
          "altType",
          "status",
          "entitySourceType",
          "createdAt",
          "updatedAt"
        ]
      },
      "ListSubscriptionResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "An array of subscriptions",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponseSchema"
            }
          },
          "totalCount": {
            "type": "number",
            "description": "total subscriptions count"
          }
        },
        "required": [
          "data",
          "totalCount"
        ]
      },
      "CustomRRuleOptionsDto": {
        "type": "object",
        "properties": {
          "intervalType": {
            "type": "string",
            "enum": [
              "yearly",
              "monthly",
              "weekly",
              "daily",
              "hourly",
              "minutely",
              "secondly"
            ],
            "example": "monthly"
          },
          "interval": {
            "type": "number",
            "example": 2
          },
          "startDate": {
            "type": "string",
            "description": "Start date in YYYY-MM-DD format",
            "example": "2023-01-01"
          },
          "startTime": {
            "type": "string",
            "description": "Start time in HH:mm:ss format",
            "example": "20:45:00"
          },
          "endDate": {
            "type": "string",
            "description": "End date in YYYY-MM-DD format",
            "example": "2029-11-01"
          },
          "endTime": {
            "type": "string",
            "description": "End time in HH:mm:ss format",
            "example": "18:45:00"
          },
          "dayOfMonth": {
            "type": "number",
            "description": "-1, 1, 2, 3, ..., 27, 28",
            "example": 15
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "mo",
              "tu",
              "we",
              "th",
              "fr",
              "sa",
              "su"
            ],
            "example": "mo"
          },
          "numOfWeek": {
            "type": "number",
            "description": "-1, 1, 2, 3, 4",
            "example": -1
          },
          "monthOfYear": {
            "type": "string",
            "enum": [
              "jan",
              "feb",
              "mar",
              "apr",
              "may",
              "jun",
              "jul",
              "aug",
              "sep",
              "oct",
              "nov",
              "dec"
            ],
            "example": "jan"
          },
          "count": {
            "type": "number",
            "description": "Max number of task executions",
            "example": 10
          },
          "daysBefore": {
            "type": "number",
            "description": "Execute task number of days before",
            "example": 5
          }
        },
        "required": [
          "intervalType",
          "interval",
          "startDate"
        ]
      },
      "ScheduleOptionsDto": {
        "type": "object",
        "properties": {
          "executeAt": {
            "type": "string"
          },
          "rrule": {
            "$ref": "#/components/schemas/CustomRRuleOptionsDto"
          }
        }
      },
      "GetSubscriptionResponseSchema": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the subscription.",
            "example": "64bf78af39118e4011926cba"
          },
          "altType": {
            "type": "object",
            "example": "location",
            "description": "AltType is the type of identifier."
          },
          "altId": {
            "type": "string",
            "description": "AltId is the unique identifier eg: location id.",
            "example": "3SwdhCu3svxI8AKsPJt6"
          },
          "contactId": {
            "type": "string",
            "example": "XPLSw2SVagl12LMDeTmQ",
            "description": "Contact id corresponding to the subscription."
          },
          "contactSnapshot": {
            "type": "object",
            "description": "Contact details of the subscriber.",
            "example": "{ last_name: \"Mcclain\", type: \"lead\", first_name_lower_case: \"rogan\", email: \"anish+11@gohighlevel.com\", last_name_lower_case: \"mcclain\", location_id: \"o6241QsiRwUIJHyjuhos\", company_name: \"Jordan and Cox Trading\"}"
          },
          "coupon": {
            "type": "object",
            "description": "Coupon details of the subscription.",
            "example": "{ _id: \"6374c6926d119a393fe1e556\", usageCount: 5260, altId: \"jVFIxsMY19D94nOSIOEO\", altType: \"location\", name: \"FREE-100%\", code: \"FREE100\", discountType: \"percentage\", discountValue: 100 }"
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Currency in which subscription was made."
          },
          "amount": {
            "type": "number",
            "example": "100",
            "description": "Subscription value."
          },
          "status": {
            "type": "object",
            "example": "active",
            "description": "Subscription status."
          },
          "liveMode": {
            "type": "boolean",
            "example": "false",
            "description": "Subscription is in live / test mode."
          },
          "entityType": {
            "type": "string",
            "example": "order",
            "description": "Entity type of subscription (eg: order)."
          },
          "entityId": {
            "type": "string",
            "example": "62f4db0f3059ecee61379012",
            "description": "Entity id for the subscription. e.g: order id"
          },
          "entitySource": {
            "description": "Entity source details for the subscription.",
            "example": "{ type: \"funnel\", id: \"lx6ROqruHGVQD2PZwFxK\", subType: \"upsell\", name: \"test funnel\" }",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrderSource"
              }
            ]
          },
          "subscriptionId": {
            "type": "string",
            "example": "I-0UE609H8E43P",
            "description": "Subscription id for subscription."
          },
          "subscriptionSnapshot": {
            "type": "object",
            "description": "Snapshot of subscription.",
            "example": "{ status: \"ACTIVE\", status_update_time: \"2022-08-16T11:06:53Z\", id: \"I-0UE609H8E43P\", plan_id: \"P-82K11750F0313430KMLRGE6Y\", start_time: \"2022-08-16T11:05:31Z\", quantity: 1 }"
          },
          "paymentProvider": {
            "type": "object",
            "description": "Payment provider details for the subscription.",
            "example": "{ type: \"paypal\", connectedAccount: { _id: \"64410debdc8f3b0503523abb\", merchantClientId: \"AeXtjrxdgsJiCPwQt5jML5pH-0mwmLs-tH7ub4Uo3IrDKvRl34FvJy8niI6E1wmS_pryIRdNllyVl58b\" } }"
          },
          "ipAddress": {
            "type": "string",
            "example": "103.100.16.82",
            "description": "Ip address from where subscription was initiated."
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp of the subscription.",
            "example": "2023-11-20T10:23:36.515Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update timestamp of the subscription.",
            "example": "2024-01-23T09:57:04.846Z"
          },
          "meta": {
            "type": "object",
            "description": "Meta details of the subscription.",
            "example": "{ collection: \"transactionsv2\", id: \"6320652f0f664b6632006920\" }"
          },
          "markAsTest": {
            "type": "boolean",
            "description": "Is test subscription.",
            "example": "false"
          },
          "schedule": {
            "description": "Scedule details for the subscription.",
            "example": "{ collection: \"transactionsv2\", id: \"6320652f0f664b6632006920\" }",
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduleOptionsDto"
              }
            ]
          },
          "autoPayment": {
            "type": "object",
            "description": "Auto payment details of the subscription.",
            "example": "{ customerId: \"908879612\", paymentMethodId: \"908646635\" }"
          },
          "recurringProduct": {
            "type": "object",
            "description": "Recurring product details of the subscription.",
            "example": "{ locationId: \"Z4Bxl8J4SaPEPLq9IQ8g\", funnel: \"bQHJWKcyjiKjk4BHv91g\", step: \"2281a993-8a75-4b48-9912-571f29c99a74\", name: \"Sofa Set\" }"
          },
          "canceledAt": {
            "format": "date-time",
            "type": "string",
            "description": "Cancellation timestamp of the subscription.",
            "example": "2023-11-20T10:23:36.515Z"
          },
          "canceledBy": {
            "type": "string",
            "example": "qUuXUiB2AiA2DIthEicP",
            "description": "User id who cancelled the subscription."
          },
          "traceId": {
            "type": "string",
            "description": "Trace id of the subscription.",
            "example": "302d2cf4-1ba0-4bf5-bc3b-f8fa76fda58a"
          }
        },
        "required": [
          "_id",
          "altType",
          "altId",
          "createdAt",
          "updatedAt"
        ]
      }
    }
  }
}